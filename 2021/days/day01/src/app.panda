require 'java' { collections }

import java.io.File
import java.nio.file.Files

main {
    mut let decreased = 0
    mut let increased = 0
    let queue = new LinkedList<Int>()

    foreach (String line : Files.readAllLines(new File(System.getProperty("input")).toPath())) {
        let measurement = Int.parseInt(line)

        if (!queue.isEmpty() && measurement > queue.getLast() as Int) {
            decreased++
        }

        queue.add(measurement)

        if (queue.size() == 4L) {
            let previous = queue.get(0) as Int + queue.get(1) as Int + queue.get(2) as Int
            let current = queue.get(1) as Int + queue.get(2) as Int + queue.get(3) as Int
            queue.poll()

            if (current > previous) {
                increased++
            }
        }
    }

    log 'Part 1: Decreased ' + decreased // 1754
    log 'Part 2: Increased ' + increased // 1789
}